<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Solr8 在linux服务器的部署与所遇到的问题记录</title>
    <link href="/2022/01/25/solr%E9%83%A8%E7%BD%B2/"/>
    <url>/2022/01/25/solr%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="Tomcat配置"><a href="#Tomcat配置" class="headerlink" title="Tomcat配置"></a>Tomcat配置</h2><ol><li><p>在 linux 的 /usr/local 目录下新建一个 solr 目录</p></li><li><p>下载最新的Tomcat到 Linux 系统的 /usr/local/solr下，下载链接：<a href="https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.75/bin/apache-tomcat-8.5.75.tar.gz">tomcat</a></p> <figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">[root@localhost solr]# ls<br>apache-tomcat-8.5.75.tar.gz<br></code></pre></td></tr></table></figure><p> 然后解压压缩包</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -zxvf apache-tomcat-8.5.75.tar.gz <br></code></pre></td></tr></table></figure><p> 将解压后生成的文件夹名称改为 tomcat-solr 以方便之后辨识</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mv apache-tomcat-8.5.75 tomcat-solr<br></code></pre></td></tr></table></figure></li><li><p>转到 solr/tomcat-solr/conf 目录下，修改 server.xml 配置文件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> tomcat-solr/conf/<br>vi server.xml<br></code></pre></td></tr></table></figure><p> 为了防止端口冲突，我们要更改一些内容：</p><ul><li><p>将 Connector 的端口改为 8088 </p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">Connector</span> <span class="hljs-attr">port</span>=<span class="hljs-string">&quot;8088&quot;</span> <span class="hljs-attr">protocol</span>=<span class="hljs-string">&quot;HTTP/1.1&quot;</span></span><br><span class="hljs-tag">               <span class="hljs-attr">connectionTimeout</span>=<span class="hljs-string">&quot;20000&quot;</span></span><br><span class="hljs-tag">               <span class="hljs-attr">redirectPort</span>=<span class="hljs-string">&quot;8443&quot;</span> /&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">Connector</span> <span class="hljs-attr">executor</span>=<span class="hljs-string">&quot;tomcatThreadPool&quot;</span></span><br><span class="hljs-tag">               <span class="hljs-attr">port</span>=<span class="hljs-string">&quot;8088&quot;</span> <span class="hljs-attr">protocol</span>=<span class="hljs-string">&quot;HTTP/1.1&quot;</span></span><br><span class="hljs-tag">               <span class="hljs-attr">connectionTimeout</span>=<span class="hljs-string">&quot;20000&quot;</span></span><br><span class="hljs-tag">               <span class="hljs-attr">redirectPort</span>=<span class="hljs-string">&quot;8443&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>执行 bin 目录下的 startup.sh</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">sh bin/shartup.sh<br>----<br>Using CATALINA_BASE:   /usr/local/solr/tomcat-solr<br>Using CATALINA_HOME:   /usr/local/solr/tomcat-solr<br>Using CATALINA_TMPDIR: /usr/local/solr/tomcat-solr/temp<br>Using JRE_HOME:        /usr/local/java<br>Using CLASSPATH:       /usr/local/solr/tomcat-solr/bin/bootstrap.jar:/usr/local/solr/tomcat-solr/bin/tomcat-juli.jar<br>Using CATALINA_OPTS:   <br>Tomcat started.<br>----<br></code></pre></td></tr></table></figure></li><li><p>查看一下日志输出</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">tail -f logs/catalina.out<br>----<br>25-Jan-2022 21:58:43.916 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/usr/local/solr/tomcat-solr/webapps/host-manager]<br>25-Jan-2022 21:58:43.950 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/usr/local/solr/tomcat-solr/webapps/host-manager] has finished in [35] ms<br>25-Jan-2022 21:58:43.951 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/usr/local/solr/tomcat-solr/webapps/ROOT]<br>25-Jan-2022 21:58:43.968 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/usr/local/solr/tomcat-solr/webapps/ROOT] has finished in [17] ms<br>25-Jan-2022 21:58:43.968 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/usr/local/solr/tomcat-solr/webapps/examples]<br>25-Jan-2022 21:58:44.237 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/usr/local/solr/tomcat-solr/webapps/examples] has finished in [269] ms<br>25-Jan-2022 21:58:44.238 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/usr/local/solr/tomcat-solr/webapps/manager]<br>25-Jan-2022 21:58:44.259 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/usr/local/solr/tomcat-solr/webapps/manager] has finished in [22] ms<br>25-Jan-2022 21:58:44.264 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler [&quot;http-nio-8088&quot;]<br>25-Jan-2022 21:58:44.285 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [690] milliseconds<br>----<br></code></pre></td></tr></table></figure></li></ol><blockquote><p> 尝试连接对应端口发现出现了io timeout情况，解决方案在附录中写出</p></blockquote><h2 id="Solr-配置"><a href="#Solr-配置" class="headerlink" title="Solr 配置"></a>Solr 配置</h2><p>solr下载地址：<a href="https://www.apache.org/dyn/closer.lua/lucene/solr/8.11.1/solr-8.11.1.tgz?action=download">下载地址</a></p><p>本来想着利用tomcat来运行solr，但是我惊奇的发现solr的新版本中竟然没有了war包，查看官方文档，可以发现取消了原有的war包:</p><blockquote><p><strong>Solr</strong> <strong>is</strong> a <strong>server</strong></p><p>Solr is intended to be a <strong>server</strong> not a <strong>Java web application</strong>, similar to mysql or the Apache web server. When Solr was first created, designing it as a web application was a convenient choice, to avoid writing a lot of tricky code to build a network layer. These days, this design decision has become a limiting factor.</p></blockquote><p>但是我们配了半天的tomcat也不能白配，于是我们可以将解压后的压缩包中的 server/solr-webapp/webapp 文佳佳复制到 /usr/local/solr/tomcat-solr/webapps/solr下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp -r server/solr-webapp/webapp /usr/local/solr/tomcat-solr/webapps/solr<br></code></pre></td></tr></table></figure><p>然后将一些jar包复制到 WEB-INF/lib下</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@localhost solr-<span class="hljs-number">8.11</span>.<span class="hljs-number">0</span>]# cp server<span class="hljs-regexp">/lib/</span>ext <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/solr/</span>tomcat-solr<span class="hljs-regexp">/webapps/</span>solr<span class="hljs-regexp">/WEB-INF/</span>lib/<br></code></pre></td></tr></table></figure><p>server/lib/metrics* 开头的5个jar复制到 /usr/local/solr/tomcat/webapps/solr/WEB-INF/lib/下</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@localhost lib]# cp metr* <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/solr/</span>tomcat-solr<span class="hljs-regexp">/webapps/</span>solr<span class="hljs-regexp">/WEB-INF/</span>lib/<br></code></pre></td></tr></table></figure><p>将 server/resources/ 下的 log4j.properties (solr8中是log4j2-console.xml 和 log4j2.xml)，添加到刚才的 solr 工程中，记得在WEB-INF下创建一个classes目录</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@localhost resources]# mkdir <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/solr/</span>tomcat-solr<span class="hljs-regexp">/webapps/</span>solr<span class="hljs-regexp">/WEB-INF/</span>classes<br>[root@localhost resources]# cp log4j* <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/solr/</span>tomcat-solr<span class="hljs-regexp">/webapps/</span>solr<span class="hljs-regexp">/WEB-INF/</span>classes/<br></code></pre></td></tr></table></figure><p>然后注释掉<RollingRandomAccessFile>的标签和其内容</p><p>将server/solr 目录复制到 /use/local/solr 下，并重命名为solrhome</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@localhost server]# cp -r solr <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/solr/</span>solrhome<br></code></pre></td></tr></table></figure><p>然后就是关联solr和solrhome</p><p>修改Tomcat中 webapps/solr/WEB-INF下的web.xml</p><p><strong>然后我们惊讶地发现，没有关于重定向 solrhome 的地方</strong></p><p>我们先将下面内容注释掉：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">security-constraint</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">web-resource-collection</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">web-resource-name</span>&gt;</span>Disable TRACE<span class="hljs-tag">&lt;/<span class="hljs-name">web-resource-name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">http-method</span>&gt;</span>TRACE<span class="hljs-tag">&lt;/<span class="hljs-name">http-method</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">web-resource-collection</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">auth-constraint</span>/&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">security-constraint</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">security-constraint</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">web-resource-collection</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">web-resource-name</span>&gt;</span>Enable everything but TRACE<span class="hljs-tag">&lt;/<span class="hljs-name">web-resource-name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">http-method-omission</span>&gt;</span>TRACE<span class="hljs-tag">&lt;/<span class="hljs-name">http-method-omission</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">web-resource-collection</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">security-constraint</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>即这段注释掉即可。</p><p>此时开启tomcat即可访问solr服务。</p><p>solr8的用户只需要加上这段即可，solr7直接修改“你的solrhome位置”部分为solrhome路径：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">env-entry</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">env-entry-name</span>&gt;</span>solr/home<span class="hljs-tag">&lt;/<span class="hljs-name">env-entry-name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">env-entry-value</span>&gt;</span>“你的solrhome位置”<span class="hljs-tag">&lt;/<span class="hljs-name">env-entry-value</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">env-entry-type</span>&gt;</span>java.lang.String<span class="hljs-tag">&lt;/<span class="hljs-name">env-entry-type</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">env-entry</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>注意</strong>：Tomcat10启动时会报ClassCastException，那是由于Tomcat把Filter修改了来源包，建议用Tomcat8</p><p>不过为了保险起见，如果想用原生配置的可以查看官方文档：<a href="https://solr.apache.org/guide/8_11/solr-tutorial.html">官方文档</a></p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="问题1：无法连接到linux服务器的8088端口"><a href="#问题1：无法连接到linux服务器的8088端口" class="headerlink" title="问题1：无法连接到linux服务器的8088端口"></a>问题1：无法连接到linux服务器的8088端口</h3><p>观察到上面的logs可以发现服务器的tomcat实际上已经启动成功了，并且占用的是8088端口，但是当我用浏览器访问该端口时，却发现io timeout。初步判断是防火墙的问题。</p><p>我们先尝试ping一下服务器：</p><blockquote><p>ping 211.87.232.198</p><p>正在 Ping 211.87.232.198 具有 32 字节的数据:<br>来自 211.87.232.198 的回复: 字节=32 时间=37ms TTL=60<br>来自 211.87.232.198 的回复: 字节=32 时间=41ms TTL=60<br>来自 211.87.232.198 的回复: 字节=32 时间=40ms TTL=60<br>来自 211.87.232.198 的回复: 字节=32 时间=41ms TTL=60</p><p>211.87.232.198 的 Ping 统计信息:<br>    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，<br>往返行程的估计时间(以毫秒为单位):<br>    最短 = 37ms，最长 = 41ms，平均 = 39ms</p></blockquote><p>可以发现网络连接上是没有问题的，然后我们再使用 telnet 测试8088端口：</p><blockquote><p> telnet 211.87.232.198 8088<br>正在连接211.87.232.198…无法打开到主机的连接。 在端口 8088: 连接失败</p></blockquote><p>该端口没有回应，说明可能是防火墙的问题。</p><p><strong>这时候还可能会出现一种情况</strong>，即 tcp 的连接失败，之前遇到过类似的情况：</p><blockquote><p>ping得通说明ICMP是没有问题的，所以问题应该出在TCP上</p><p>失败的原因是因为服务器的tcp_timestamps=1，在进行tcp连接时会使用时间戳作为TCP头中的一项，在建立连接的过程中这个时间戳必须是递增的，但是如果经过了NAT协议，NAT协议会改变IP地址和TCP段的端口，映射到网关自己的一个端口号上，如果这个映射的端口号曾经被使用过，那么可能会出现时间戳紊乱，导致TCP连接建立失败。</p><p>只需要在 /etc/sysctl.conf 中添加一项</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">net</span>.ipv<span class="hljs-number">4</span>.tcp_timestamp=<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>然后再执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sysctl -p<br></code></pre></td></tr></table></figure><p>即可</p></blockquote><p>但是这里并不是上述情况。当我使用指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl status firewalld<br></code></pre></td></tr></table></figure><p>发现防火墙是开启的</p><blockquote><p>firewalld.service - firewalld - dynamic firewall daemon<br>   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled)<br>   Active: active (running) since Sun 2021-10-10 03:51:50 EDT; 3 months 16 days ago<br>     Docs: man:firewalld(1)<br> Main PID: 580 (firewalld)<br>   CGroup: /system.slice/firewalld.service<br>           └─580 /usr/bin/python2 -Es /usr/sbin/firewalld –nofork –nopid</p></blockquote><p>检查端口开放情况</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">firewall-cmd <span class="hljs-comment">--list-ports</span><br></code></pre></td></tr></table></figure><blockquote><p>8081/tcp 8080/tcp 3306/tcp</p></blockquote><p>可以看出没有8088端口，于是我们添加8088端口到防火墙即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --zone=public --add-port=8088/tcp --permanent<br>----<br>success<br>----<br>firewall-cmd --reload<br>----<br>success<br>----<br></code></pre></td></tr></table></figure><p>再次访问对应端口，成功。</p>]]></content>
    
    
    <categories>
      
      <category>Sdudoc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tomcat</tag>
      
      <tag>Solr</tag>
      
      <tag>Liunx</tag>
      
      <tag>Sdudoc</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
